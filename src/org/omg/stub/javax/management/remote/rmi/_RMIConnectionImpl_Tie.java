// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.omg.stub.javax.management.remote.rmi;

import java.io.IOException;
import java.io.Serializable;
import java.rmi.MarshalledObject;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Set;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.NotCompliantMBeanException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.remote.NotificationResult;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import javax.security.auth.Subject;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;
import org.omg.CORBA_2_3.portable.ObjectImpl;

import javax.management.remote.rmi.*  ;

public class _RMIConnectionImpl_Tie extends ObjectImpl implements Tie {
    
    private RMIConnectionImpl target = null;
    
    private static final String[] _type_ids = {
        "RMI:javax.management.remote.rmi.RMIConnection:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (RMIConnectionImpl) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        _orb().disconnect(this);
        _set_delegate(null);
        target = null;
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream  _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.charAt(3)) {
                case 65: 
                    if (method.equals("getAttribute")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        String arg1 = (String) in.read_value(String.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        Object result;
                        try {
                            result = target.getAttribute(arg0, arg1, arg2);
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (AttributeNotFoundException ex) {
                            String id = "IDL:javax/management/AttributeNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,AttributeNotFoundException.class);
                            return out;
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        Util.writeAny(out,result);
                        return out;
                    } else if (method.equals("getAttributes")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        String[] arg1 = (String[]) in.read_value(String[].class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        AttributeList result;
                        try {
                            result = target.getAttributes(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,AttributeList.class);
                        return out;
                    } else if (method.equals("setAttribute")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg1 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        try {
                            target.setAttribute(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (AttributeNotFoundException ex) {
                            String id = "IDL:javax/management/AttributeNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,AttributeNotFoundException.class);
                            return out;
                        } catch (InvalidAttributeValueException ex) {
                            String id = "IDL:javax/management/InvalidAttributeValueEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InvalidAttributeValueException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    } else if (method.equals("setAttributes")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg1 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        AttributeList result;
                        try {
                            result = target.setAttributes(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,AttributeList.class);
                        return out;
                    }
                case 67: 
                    if (method.equals("getConnectionId")) {
                        String result;
                        try {
                            result = target.getConnectionId();
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,String.class);
                        return out;
                    }
                case 68: 
                    if (method.equals("getDefaultDomain")) {
                        Subject arg0 = (Subject) in.read_value(Subject.class);
                        String result;
                        try {
                            result = target.getDefaultDomain(arg0);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,String.class);
                        return out;
                    } else if (method.equals("getDomains")) {
                        Subject arg0 = (Subject) in.read_value(Subject.class);
                        String[] result;
                        try {
                            result = target.getDomains(arg0);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(cast_array(result),String[].class);
                        return out;
                    }
                case 77: 
                    if (method.equals("getMBeanCount")) {
                        Subject arg0 = (Subject) in.read_value(Subject.class);
                        Integer result;
                        try {
                            result = target.getMBeanCount(arg0);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,Integer.class);
                        return out;
                    } else if (method.equals("getMBeanInfo")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg1 = (Subject) in.read_value(Subject.class);
                        MBeanInfo result;
                        try {
                            result = target.getMBeanInfo(arg0, arg1);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IntrospectionException ex) {
                            String id = "IDL:javax/management/IntrospectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IntrospectionException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,MBeanInfo.class);
                        return out;
                    }
                case 78: 
                    if (method.equals("addNotificationListener")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg2 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        MarshalledObject arg3 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg4 = (Subject) in.read_value(Subject.class);
                        try {
                            target.addNotificationListener(arg0, arg1, arg2, arg3, arg4);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    } else if (method.equals("addNotificationListeners")) {
                        ObjectName[] arg0 = (ObjectName[]) in.read_value(ObjectName[].class);
                        MarshalledObject[] arg1 = (MarshalledObject[]) in.read_value(MarshalledObject[].class);
                        Subject[] arg2 = (Subject[]) in.read_value(Subject[].class);
                        Integer[] result;
                        try {
                            result = target.addNotificationListeners(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(cast_array(result),Integer[].class);
                        return out;
                    }
                case 79: 
                    if (method.equals("getObjectInstance")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg1 = (Subject) in.read_value(Subject.class);
                        ObjectInstance result;
                        try {
                            result = target.getObjectInstance(arg0, arg1);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,ObjectInstance.class);
                        return out;
                    }
                case 97: 
                    if (method.equals("createMBean__CORBA_WStringValue__javax_management_ObjectName__javax_security_auth_Subject")) {
                        String arg0 = (String) in.read_value(String.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        ObjectInstance result;
                        try {
                            result = target.createMBean(arg0, arg1, arg2);
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (InstanceAlreadyExistsException ex) {
                            String id = "IDL:javax/management/InstanceAlreadyExistsEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceAlreadyExistsException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (NotCompliantMBeanException ex) {
                            String id = "IDL:javax/management/NotCompliantMBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,NotCompliantMBeanException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,ObjectInstance.class);
                        return out;
                    } else if (method.equals("createMBean__CORBA_WStringValue__javax_management_ObjectName__javax_management_ObjectName__javax_security_auth_Subject")) {
                        String arg0 = (String) in.read_value(String.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        ObjectName arg2 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg3 = (Subject) in.read_value(Subject.class);
                        ObjectInstance result;
                        try {
                            result = target.createMBean(arg0, arg1, arg2, arg3);
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (InstanceAlreadyExistsException ex) {
                            String id = "IDL:javax/management/InstanceAlreadyExistsEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceAlreadyExistsException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (NotCompliantMBeanException ex) {
                            String id = "IDL:javax/management/NotCompliantMBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,NotCompliantMBeanException.class);
                            return out;
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,ObjectInstance.class);
                        return out;
                    } else if (method.equals("createMBean__CORBA_WStringValue__javax_management_ObjectName__java_rmi_MarshalledObject__org_omg_boxedRMI_CORBA_seq1_WStringValue__javax_security_auth_Subject")) {
                        String arg0 = (String) in.read_value(String.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg2 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        String[] arg3 = (String[]) in.read_value(String[].class);
                        Subject arg4 = (Subject) in.read_value(Subject.class);
                        ObjectInstance result;
                        try {
                            result = target.createMBean(arg0, arg1, arg2, arg3, arg4);
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (InstanceAlreadyExistsException ex) {
                            String id = "IDL:javax/management/InstanceAlreadyExistsEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceAlreadyExistsException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (NotCompliantMBeanException ex) {
                            String id = "IDL:javax/management/NotCompliantMBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,NotCompliantMBeanException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,ObjectInstance.class);
                        return out;
                    } else if (method.equals("createMBean__CORBA_WStringValue__javax_management_ObjectName__javax_management_ObjectName__java_rmi_MarshalledObject__org_omg_boxedRMI_CORBA_seq1_WStringValue__javax_security_auth_Subject")) {
                        String arg0 = (String) in.read_value(String.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        ObjectName arg2 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg3 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        String[] arg4 = (String[]) in.read_value(String[].class);
                        Subject arg5 = (Subject) in.read_value(Subject.class);
                        ObjectInstance result;
                        try {
                            result = target.createMBean(arg0, arg1, arg2, arg3, arg4, arg5);
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (InstanceAlreadyExistsException ex) {
                            String id = "IDL:javax/management/InstanceAlreadyExistsEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceAlreadyExistsException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (NotCompliantMBeanException ex) {
                            String id = "IDL:javax/management/NotCompliantMBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,NotCompliantMBeanException.class);
                            return out;
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,ObjectInstance.class);
                        return out;
                    }
                case 99: 
                    if (method.equals("fetchNotifications")) {
                        long arg0 = in.read_longlong();
                        int arg1 = in.read_long();
                        long arg2 = in.read_longlong();
                        NotificationResult result;
                        try {
                            result = target.fetchNotifications(arg0, arg1, arg2);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,NotificationResult.class);
                        return out;
                    }
                case 101: 
                    if (method.equals("unregisterMBean")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg1 = (Subject) in.read_value(Subject.class);
                        try {
                            target.unregisterMBean(arg0, arg1);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (MBeanRegistrationException ex) {
                            String id = "IDL:javax/management/MBeanRegistrationEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanRegistrationException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    } else if (method.equals("isRegistered")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg1 = (Subject) in.read_value(Subject.class);
                        boolean result;
                        try {
                            result = target.isRegistered(arg0, arg1);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        out.write_boolean(result);
                        return out;
                    }
                case 110: 
                    if (method.equals("isInstanceOf")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        String arg1 = (String) in.read_value(String.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        boolean result;
                        try {
                            result = target.isInstanceOf(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        out.write_boolean(result);
                        return out;
                    }
                case 111: 
                    if (method.equals("invoke")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        String arg1 = (String) in.read_value(String.class);
                        MarshalledObject arg2 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        String[] arg3 = (String[]) in.read_value(String[].class);
                        Subject arg4 = (Subject) in.read_value(Subject.class);
                        Object result;
                        try {
                            result = target.invoke(arg0, arg1, arg2, arg3, arg4);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (MBeanException ex) {
                            String id = "IDL:javax/management/MBeanEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,MBeanException.class);
                            return out;
                        } catch (ReflectionException ex) {
                            String id = "IDL:javax/management/ReflectionEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ReflectionException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        Util.writeAny(out,result);
                        return out;
                    } else if (method.equals("removeNotificationListener__javax_management_ObjectName__javax_management_ObjectName__javax_security_auth_Subject")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        try {
                            target.removeNotificationListener(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ListenerNotFoundException ex) {
                            String id = "IDL:javax/management/ListenerNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ListenerNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    } else if (method.equals("removeNotificationListener__javax_management_ObjectName__javax_management_ObjectName__java_rmi_MarshalledObject__java_rmi_MarshalledObject__javax_security_auth_Subject")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        ObjectName arg1 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg2 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        MarshalledObject arg3 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg4 = (Subject) in.read_value(Subject.class);
                        try {
                            target.removeNotificationListener(arg0, arg1, arg2, arg3, arg4);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ListenerNotFoundException ex) {
                            String id = "IDL:javax/management/ListenerNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ListenerNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    } else if (method.equals("removeNotificationListeners")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        Integer[] arg1 = (Integer[]) in.read_value(Integer[].class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        try {
                            target.removeNotificationListeners(arg0, arg1, arg2);
                        } catch (InstanceNotFoundException ex) {
                            String id = "IDL:javax/management/InstanceNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,InstanceNotFoundException.class);
                            return out;
                        } catch (ListenerNotFoundException ex) {
                            String id = "IDL:javax/management/ListenerNotFoundEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,ListenerNotFoundException.class);
                            return out;
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 114: 
                    if (method.equals("queryMBeans")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg1 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        Set result;
                        try {
                            result = target.queryMBeans(arg0, arg1, arg2);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value((Serializable)result,Set.class);
                        return out;
                    } else if (method.equals("queryNames")) {
                        ObjectName arg0 = (ObjectName) in.read_value(ObjectName.class);
                        MarshalledObject arg1 = (MarshalledObject) in.read_value(MarshalledObject.class);
                        Subject arg2 = (Subject) in.read_value(Subject.class);
                        Set result;
                        try {
                            result = target.queryNames(arg0, arg1, arg2);
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value((Serializable)result,Set.class);
                        return out;
                    }
                case 115: 
                    if (method.equals("close")) {
                        try {
                            target.close();
                        } catch (IOException ex) {
                            String id = "IDL:java/io/IOEx:1.0";
                            org.omg.CORBA_2_3.portable.OutputStream out = 
                                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
                            out.write_string(id);
                            out.write_value(ex,IOException.class);
                            return out;
                        }
                        OutputStream out = reply.createReply();
                        return out;
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    // This method is required as a work-around for
    // a bug in the JDK 1.1.6 verifier.
    
    private Serializable cast_array(Object obj) {
        return (Serializable)obj;
    }
}
